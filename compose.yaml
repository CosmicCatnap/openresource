name: openresource
services:
<<<<<<< HEAD
  frontend:
    build:
      context: frontend
      target: builder
    networks:
      - frontend
    ports:
      - 3000:3000
    volumes:
      - ./frontend/src:/code/src:ro
    environment:
      - BACKEND_URL:localhost:8000
      - HOSTNAME="0.0.0.0"
    command: node /code/src/server.js
    depends_on:
      backend:
        condition: service_healthy

  backend:
    build:
      context: backend
      target: builder
    networks:
      - frontend
      - backend
    ports:
      - 8000:8000
    environment:
      - PORT=8000
      - DATABASE_URL=postgres://openresource:openresource@host.docker.internal:5432/openresource
      - HOST=0.0.0.0
      - RUST_LOG=info
    command: /srv/openresource
    depends_on:
      database:
        condition: service_healthy

  database:
    image: postgres:bookworm
    restart: always
    environment:
      - POSTGRES_USER=openresource
      - POSTGRES_PASSWORD=openresource
      - POSTGRES_DB=openresource
=======
#  frontend:
#    build:
#      context: frontend
#      target: development
#    networks:
#      - client-side
#    ports:
#      - 3000:3000
#    volumes:
#      - ./frontend:/code/src:ro
#    env_file:
#      - ./frontend/.env
#    depends_on:
#      backend:
#        condition: service_healthy
  database:
    image: postgres:bookworm
    restart: always
    env_file:
      - ./database/.env
>>>>>>> a9915badc85e4ec7385ae81e64e33b5c9deb26cc
    networks:
      - backend
    ports:
      - 5432:5432
    volumes:
<<<<<<< HEAD
      - database:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 5s
      timeout: 10s
      retries: 10

networks:
  frontend: {}
  backend: {}

=======
      - db-data:/var/lib/postgresql/data
  backend:
    build:
      context: backend
      target: final
    networks:
      - client-side
      - server-side
    ports:
      - 8000:8000
    env_file:
      - ./backend/.env
    depends_on:
      database:
        condition: service_healthy
networks:
  client-side: {}
  server-side: {}
>>>>>>> a9915badc85e4ec7385ae81e64e33b5c9deb26cc
volumes:
  backend-cache: {}
  database: {}
